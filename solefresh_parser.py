import requests
from bs4 import BeautifulSoup
import csv
import re

def parse_solefresh():
    print('=== –î–ï–¢–ê–õ–¨–ù–´–ô –ü–ê–†–°–ò–ù–ì S–ûLEFRESH –ù–ê PYTHON ===')
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
    url = 'https://solefresh.ru/price/'
    headers = {
        'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) 
AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36'
    }
    
    try:
        response = requests.get(url, headers=headers)
        response.raise_for_status()
        
        soup = BeautifulSoup(response.text, 'html.parser')
        all_text = soup.get_text()
        lines = [line.strip() for line in all_text.split('\n') if 
line.strip()]
        
        services_by_category = {
            'CLASSIC': [],
            'STANDART': [],
            'PREMIUM': [],
            'SNEAKERHEAD': [],
            'HIGH TOP': [],
            '–î–ï–¢–°–ö–ê–Ø –û–ë–£–í–¨': [],
            '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏': []
        }
        
        current_main_category = 'CLASSIC'
        current_sub_category = ''
        
        for line in lines:
            clean_line = line.strip()
            lower_line = clean_line.lower()
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
            if 'classic' in lower_line:
                current_main_category = 'CLASSIC'
            if 'standart' in lower_line or '—Å—Ç–∞–Ω–¥–∞—Ä—Ç' in lower_line:
                current_main_category = 'STANDART'
            if 'premium' in lower_line or '–ø—Ä–µ–º–∏—É–º' in lower_line:
                current_main_category = 'PREMIUM'
            if 'sneakerhead' in lower_line:
                current_main_category = 'SNEAKERHEAD'
            if 'high top' in lower_line or '—Ö–∞–π-—Ç–æ–ø' in lower_line:
                current_main_category = 'HIGH TOP'
            if '–¥–µ—Ç—Å–∫' in lower_line or '—Ä–µ–±–µ–Ω' in lower_line:
                current_main_category = '–î–ï–¢–°–ö–ê–Ø –û–ë–£–í–¨'
            if any(word in lower_line for word in ['–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω', '—É—Ö–æ–¥', 
'—Ä–µ–º–æ–Ω—Ç', '–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ']):
                current_main_category = '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏'
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é (—Ç–∏–ø —á–∏—Å—Ç–∫–∏)
            if '–∫–æ–º–ø–ª–µ–∫—Å–Ω–∞—è' in lower_line or '–∫–æ–º–ø–ª–µ–∫—Å' in lower_line:
                current_sub_category = '–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è —á–∏—Å—Ç–∫–∞'
            elif '–≥–ª—É–±–æ–∫–∞—è' in lower_line or '–ø–æ–ª–Ω–∞—è' in lower_line:
                current_sub_category = '–ì–ª—É–±–æ–∫–∞—è —á–∏—Å—Ç–∫–∞'
            
            # –ò—â–µ–º —Å—Ç—Ä–æ–∫–∏ —Å —Ü–µ–Ω–∞–º–∏
            if (clean_line and 
                any(marker in clean_line for marker in ['‚ÇΩ', '—Ä—É–±']) and
                re.search(r'\d', clean_line) and
                5 < len(clean_line) < 100):
                
                # –†–∞–∑–¥–µ–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Ü–µ–Ω—É
                price_match = re.search(r'(\d[\d\s]*)\s*[‚ÇΩ—Ä—É–±—Ä]', 
clean_line)
                if price_match:
                    price = price_match.group(0).strip()
                    name = re.sub(r'[‚Äì‚Äî]\s*$', '', 
clean_line.replace(price, '')).strip()
                    
                    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ü–µ–Ω—É
                    formatted_price = re.sub(r'\s+', ' ', price)
                    formatted_price = re.sub(r'–æ—Ç(\d)', r'–æ—Ç \1', 
formatted_price)
                    formatted_price = re.sub(r'(\d)([‚ÇΩ—Ä—É–±])', r'\1 \2', 
formatted_price)
                    
                    # –î–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ª—É–≥ –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ 
–Ω–∞–∑–≤–∞–Ω–∏–µ
                    if current_main_category == '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏':
                        
services_by_category[current_main_category].append({
                            'name': name,
                            'price': formatted_price,
                            'type': '–£—Å–ª—É–≥–∞'
                        })
                    else:
                        # –î–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π —á–∏—Å—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —Ç–∏–ø 
—á–∏—Å—Ç–∫–∏
                        
services_by_category[current_main_category].append({
                            'name': current_sub_category or '–ß–∏—Å—Ç–∫–∞',
                            'price': formatted_price,
                            'type': current_sub_category or '–ß–∏—Å—Ç–∫–∞'
                        })
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é —Å—Ç—Ä–æ–∫—É –¥–ª—è –¥–µ—Ç—Å–∫–æ–π –æ–±—É–≤–∏
        services_by_category['–î–ï–¢–°–ö–ê–Ø –û–ë–£–í–¨'] = [{
            'name': '-50% –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É –¥–æ 34 —Ä–∞–∑–º–µ—Ä–∞',
            'price': '',
            'type': '–ê–∫—Ü–∏—è'
        }]
        
        # –°–æ–∑–¥–∞–µ–º CSV —Ñ–∞–π–ª
        with open('—É—Å–ª—É–≥–∏_solefresh_python.csv', 'w', newline='', 
encoding='utf-8-sig') as csvfile:
            writer = csv.writer(csvfile, delimiter=';')
            
            # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ö–∏–º—á–∏—Å—Ç–∫–∏ –æ–±—É–≤–∏
            cleaning_categories = ['CLASSIC', 'STANDART', 'PREMIUM', 
'SNEAKERHEAD', 'HIGH TOP', '–î–ï–¢–°–ö–ê–Ø –û–ë–£–í–¨']
            
            for category in cleaning_categories:
                if services_by_category[category]:
                    writer.writerow([category.upper()])
                    
                    for service in services_by_category[category]:
                        writer.writerow([service['name'], 
service['price']])
                    
                    writer.writerow([''])  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –º–µ–∂–¥—É 
–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏
            if services_by_category['–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏']:
                writer.writerow(['–î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –£–°–õ–£–ì–ò'])
                
                for service in services_by_category['–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ 
—É—Å–ª—É–≥–∏']:
                    writer.writerow([service['name'], service['price']])
        
        print('‚úÖ –§–∞–π–ª "—É—Å–ª—É–≥–∏_solefresh_python.csv" —Å–æ–∑–¥–∞–Ω!')
        
        # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        for category in cleaning_categories:
            if services_by_category[category]:
                print(f'üìä {category}: 
{len(services_by_category[category])} –∑–∞–ø–∏—Å–µ–π')
        print(f'üìä –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏: 
{len(services_by_category["–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏"])} —É—Å–ª—É–≥')
        
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞: {e}')

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥
if __name__ == '__main__':
    parse_solefresh()


import requests
from bs4 import BeautifulSoup
import csv
import re

def parse_solefresh():
    print('=== –î–ï–¢–ê–õ–¨–ù–´–ô –ü–ê–†–°–ò–ù–ì S–ûLEFRESH –ù–ê PYTHON ===')
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
    url = 'https://solefresh.ru/price/'
    headers = {
        'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) 
AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36'
    }
    
    try:
        response = requests.get(url, headers=headers)
        response.raise_for_status()
        
        soup = BeautifulSoup(response.text, 'html.parser')
        all_text = soup.get_text()
        lines = [line.strip() for line in all_text.split('\n') if 
line.strip()]
        
        services_by_category = {
            'CLASSIC': [],
            'STANDART': [],
            'PREMIUM': [],
            'SNEAKERHEAD': [],
            'HIGH TOP': [],
            '–î–ï–¢–°–ö–ê–Ø –û–ë–£–í–¨': [],
            '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏': []
        }
        
        current_main_category = 'CLASSIC'
        current_sub_category = ''
        
        for line in lines:
            clean_line = line.strip()
            lower_line = clean_line.lower()
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
            if 'classic' in lower_line:
                current_main_category = 'CLASSIC'
            if 'standart' in lower_line or '—Å—Ç–∞–Ω–¥–∞—Ä—Ç' in lower_line:
                current_main_category = 'STANDART'
            if 'premium' in lower_line or '–ø—Ä–µ–º–∏—É–º' in lower_line:
                current_main_category = 'PREMIUM'
            if 'sneakerhead' in lower_line:
                current_main_category = 'SNEAKERHEAD'
            if 'high top' in lower_line or '—Ö–∞–π-—Ç–æ–ø' in lower_line:
                current_main_category = 'HIGH TOP'
            if '–¥–µ—Ç—Å–∫' in lower_line or '—Ä–µ–±–µ–Ω' in lower_line:
                current_main_category = '–î–ï–¢–°–ö–ê–Ø –û–ë–£–í–¨'
            if any(word in lower_line for word in ['–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω', '—É—Ö–æ–¥', 
'—Ä–µ–º–æ–Ω—Ç', '–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ']):
                current_main_category = '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏'
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é (—Ç–∏–ø —á–∏—Å—Ç–∫–∏)
            if '–∫–æ–º–ø–ª–µ–∫—Å–Ω–∞—è' in lower_line or '–∫–æ–º–ø–ª–µ–∫—Å' in lower_line:
                current_sub_category = '–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è —á–∏—Å—Ç–∫–∞'
            elif '–≥–ª—É–±–æ–∫–∞—è' in lower_line or '–ø–æ–ª–Ω–∞—è' in lower_line:
                current_sub_category = '–ì–ª—É–±–æ–∫–∞—è —á–∏—Å—Ç–∫–∞'
            
            # –ò—â–µ–º —Å—Ç—Ä–æ–∫–∏ —Å —Ü–µ–Ω–∞–º–∏
            if (clean_line and 
                any(marker in clean_line for marker in ['‚ÇΩ', '—Ä—É–±']) and
                re.search(r'\d', clean_line) and
                5 < len(clean_line) < 100):
                
                # –†–∞–∑–¥–µ–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —Ü–µ–Ω—É
                price_match = re.search(r'(\d[\d\s]*)\s*[‚ÇΩ—Ä—É–±—Ä]', 
clean_line)
                if price_match:
                    price = price_match.group(0).strip()
                    name = re.sub(r'[‚Äì‚Äî]\s*$', '', 
clean_line.replace(price, '')).strip()
                    
                    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ü–µ–Ω—É
                    formatted_price = re.sub(r'\s+', ' ', price)
                    formatted_price = re.sub(r'–æ—Ç(\d)', r'–æ—Ç \1', 
formatted_price)
                    formatted_price = re.sub(r'(\d)([‚ÇΩ—Ä—É–±])', r'\1 \2', 
formatted_price)
                    
                    # –î–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ª—É–≥ –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ 
–Ω–∞–∑–≤–∞–Ω–∏–µ
                    if current_main_category == '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏':
                        
services_by_category[current_main_category].append({
                            'name': name,
                            'price': formatted_price,
                            'type': '–£—Å–ª—É–≥–∞'
                        })
                    else:
                        # –î–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π —á–∏—Å—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —Ç–∏–ø 
—á–∏—Å—Ç–∫–∏
                        
services_by_category[current_main_category].append({
                            'name': current_sub_category or '–ß–∏—Å—Ç–∫–∞',
                            'price': formatted_price,
                            'type': current_sub_category or '–ß–∏—Å—Ç–∫–∞'
                        })
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é —Å—Ç—Ä–æ–∫—É –¥–ª—è –¥–µ—Ç—Å–∫–æ–π –æ–±—É–≤–∏
        services_by_category['–î–ï–¢–°–ö–ê–Ø –û–ë–£–í–¨'] = [{
            'name': '-50% –Ω–∞ —Ö–∏–º—á–∏—Å—Ç–∫—É –¥–æ 34 —Ä–∞–∑–º–µ—Ä–∞',
            'price': '',
            'type': '–ê–∫—Ü–∏—è'
        }]
        
        # –°–æ–∑–¥–∞–µ–º CSV —Ñ–∞–π–ª
        with open('—É—Å–ª—É–≥–∏_solefresh_python.csv', 'w', newline='', 
encoding='utf-8-sig') as csvfile:
            writer = csv.writer(csvfile, delimiter=';')
            
            # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ö–∏–º—á–∏—Å—Ç–∫–∏ –æ–±—É–≤–∏
            cleaning_categories = ['CLASSIC', 'STANDART', 'PREMIUM', 
'SNEAKERHEAD', 'HIGH TOP', '–î–ï–¢–°–ö–ê–Ø –û–ë–£–í–¨']
            
            for category in cleaning_categories:
                if services_by_category[category]:
                    writer.writerow([category.upper()])
                    
                    for service in services_by_category[category]:
                        writer.writerow([service['name'], 
service['price']])
                    
                    writer.writerow([''])  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –º–µ–∂–¥—É 
–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏
            if services_by_category['–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏']:
                writer.writerow(['–î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –£–°–õ–£–ì–ò'])
                
                for service in services_by_category['–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ 
—É—Å–ª—É–≥–∏']:
                    writer.writerow([service['name'], service['price']])
        
        print('‚úÖ –§–∞–π–ª "—É—Å–ª—É–≥–∏_solefresh_python.csv" —Å–æ–∑–¥–∞–Ω!')
        
        # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        for category in cleaning_categories:
            if services_by_category[category]:
                print(f'üìä {category}: 
{len(services_by_category[category])} –∑–∞–ø–∏—Å–µ–π')
        print(f'üìä –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏: 
{len(services_by_category["–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏"])} —É—Å–ª—É–≥')
        
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞: {e}')

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥
if __name__ == '__main__':
    parse_solefresh()

